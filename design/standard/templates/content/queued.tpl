{* DO NOT EDIT THIS FILE! Use an override template instead. *}

{**
 * Available variables:
 *
 * eZContentObject $content_object The published content object
 * eZContentObjectVersion  $content_object_version The published version
 * eZContentClass $content_class The published object's content class
 *}

{ezscript_require( array( 'ezjsc::yui3', 'ezjsc::yui3io' ) )}

<script type="text/javascript">
<!--
var finishedMessage = "{'Item is published.'|i18n( 'design/standard/location' )}";
var deferredMessage = "{'Publishing has been deferred to crontab and will be published when the operation resumes. The object is also listed in your dashboard under pending items.'|i18n( 'design/standard/location' )}";
var linkMessage = "{'View item'|i18n( 'design/standard/location' )}";
var statusMessage = "{'Current status'|i18n( 'design/standard/location' )}: ";

var contentObjectId = {$contentObjectId};
var version = {$version};
var ajaxUri = 'ezpublishingqueue::status::' + contentObjectId + '::' + version;
var publishQueueUpdater = false;
{* redirect uri posted in the content/edit form *}
var redirectUri = {if is_set( $redirect_uri )}'{$redirect_uri}'{else}false{/if};

{literal}
YUI( YUI3_config ).use('node', 'io-ez', function( Y )
{
    Y.on( "contentready", function( e )
    {
        publishingQueueUpdateStatus();
        publishQueueUpdater = Y.later( 1000, null, publishingQueueUpdateStatus, null, true );
    }, '#publish-queue-status' );

    function publishingQueueUpdateStatus()
    {
        Y.io.ez( ajaxUri, {
            on: {success: function( id,r )
                {
                    if ( r.responseJSON.error_text )
                        Y.get( '#publish-queue-status-placeholder' ).setContent( r.responseJSON.error_text );
                    else
                    {
                        status = r.responseJSON.content.status;
                        message = statusMessage + r.responseJSON.content.status;
                        Y.get( '#publish-queue-status-placeholder' ).setContent( message );

                        // publishing finished
                        if ( ( status == 'finished' ) )
                        {
                            if ( publishQueueUpdater != null )
                                publishQueueUpdater.cancel();

                            if ( redirectUri != false )
                            {
                                window.location = redirectUri;
                            }
                            else
                            {
                                node_uri = r.responseJSON.content.node_uri;
                                Y.get( '#publish-queue-status-placeholder' ).setContent(
                                    finishedMessage + ' <a href="' + node_uri + '">' + linkMessage + '</a>'
                                );
                            }
                        }
                        // deferred to crontab
                        else if ( status == 'deferred' )
                        {
                            if ( publishQueueUpdater != null )
                                publishQueueUpdater.cancel();

                            console.log( r.responseJSON.content );
                            Y.get( '#publish-queue-status-placeholder' ).setContent
                            (
                                deferredMessage + ' <a href="' + r.responseJSON.content.versionview_uri + '">' + linkMessage + '</a><br />'
                            );
                        }
                    }
                }
            }
        , method: 'GET'});
    }
});
{/literal}
// -->
</script>
<h1>{'Your content is being published'|i18n( 'design/standard/content' )}</h1>
<div id="publish-queue-status"><div id="publish-queue-status-placeholder" style="display: inline"></div></div>
