# Reference fixes
replace "=& \$contentObjectAttribute->contentClassAttribute(" "= \$contentObjectAttribute->contentClassAttribute(" -- `find * -name "*.php"`
replace "&\$cli" "\$cli" -- `find * -name "*.php"`
replace "=& eZTextCodec::instance(" "= eZTextCodec::instance(" -- `find * -name "*.php"`
replace "=& eZShopAccountHandler::instance(" "= eZShopAccountHandler::instance(" -- `find * -name "*.php"`
replace "=& eZBasket::currentBasket(" "= eZBasket::currentBasket(" -- `find * -name "*.php"`
replace "=& \$attribute->content()" "= \$attribute->content()" -- `find * -name "*.php"`
replace "=& \$classAttribute->content()" "= \$classAttribute->content()" -- `find * -name "*.php"`
replace "=& eZINI::instance(" "= eZINI::instance(" -- `find * -name "*.php"`
replace "=& \$contentObjectAttribute->content(" "= \$contentObjectAttribute->content(" -- `find * -name "*.php"`
replace "=& eZContentObject::fetch(" "= eZContentObject::fetch(" -- `find * -name "*.php"`
replace "=& eZContentClassAttribute::fetchFilteredList(" "= eZContentClassAttribute::fetchFilteredList(" -- `find * -name "*.php"`
replace "=& \$class->fetchAttributes(" "= \$class->fetchAttributes(" -- `find * -name "*.php"`
replace "=& \$contentObject->dataMap(" "= \$contentObject->dataMap(" -- `find * -name "*.php"`
replace "=& \$object->dataMap(" "= \$object->dataMap(" -- `find * -name "*.php"`
replace "=& \$object->contentClass(" "= \$object->contentClass(" -- `find * -name "*.php"`
replace "=& \$object->version(" "= \$object->version(" -- `find * -name "*.php"`
replace "function &classAttributeContent( &\$classAttribute )" "function classAttributeContent( \$classAttribute )" -- `find * -name "*.php"`
replace "function &objectAttributeContent( &\$contentObjectAttribute )" "function objectAttributeContent( \$contentObjectAttribute )" -- `find * -name "*.php"`
replace "function hasObjectAttributeContent( &\$contentObjectAttribute )" "function hasObjectAttributeContent( \$contentObjectAttribute )" -- `find * -name "*.php"`
replace "function storeObjectAttribute( &\$attribute )" "function storeObjectAttribute( \$attribute )" -- `find * -name "*.php"`
replace "function storeClassAttribute( &\$attribute, \$version )" "function storeClassAttribute( \$attribute, \$version )" -- `find * -name "*.php"`
replace "function storeDefinedClassAttribute( &\$attribute )" "function storeDefinedClassAttribute( \$attribute )" -- `find * -name "*.php"`
replace "function validateClassAttributeHTTPInput( &\$http, \$base, &\$classAttribute )" "function validateClassAttributeHTTPInput( \$http, \$base, \$classAttribute )" -- `find * -name "*.php"`
replace "function fixupClassAttributeHTTPInput( &\$http, \$base, &\$classAttribute )" "function fixupClassAttributeHTTPInput( \$http, \$base, \$classAttribute )" -- `find * -name "*.php"`
replace "function fetchClassAttributeHTTPInput( &\$http, \$base, &\$classAttribute )" "function fetchClassAttributeHTTPInput( \$http, \$base, \$classAttribute )" -- `find * -name "*.php"`
replace "function validateStringHTTPInput( \$data, &\$contentObjectAttribute, &\$classAttribute )" "function validateStringHTTPInput( \$data, \$contentObjectAttribute, \$classAttribute )" -- `find * -name "*.php"`
replace "function fetchObjectAttributeHTTPInput( &\$http, \$base, &\$contentObjectAttribute )" "function fetchObjectAttributeHTTPInput( \$http, \$base, \$contentObjectAttribute )" -- `find * -name "*.php"`
replace "function validateCollectionAttributeHTTPInput( &\$http, \$base, &\$contentObjectAttribute )" "function validateCollectionAttributeHTTPInput( \$http, \$base, \$contentObjectAttribute )" -- `find * -name "*.php"`
replace "function fetchCollectionAttributeHTTPInput( &\$collection, &\$collectionAttribute, &\$http, \$base, &\$contentObjectAttribute )" "function fetchCollectionAttributeHTTPInput( &\$collection, \$collectionAttribute, \$http, \$base, \$contentObjectAttribute )" -- `find * -name "*.php"`
replace "function validateObjectAttributeHTTPInput( &\$http, \$base, &\$contentObjectAttribute )" "function validateObjectAttributeHTTPInput( \$http, \$base, \$contentObjectAttribute )" -- `find * -name "*.php"`
replace "function initializeClassAttribute( &\$classAttribute )" "function initializeClassAttribute( \$classAttribute )" -- `find * -name "*.php"`
replace "function &viewTemplate( &\$contentobjectAttribute )" "function viewTemplate( \$contentobjectAttribute )" -- `find * -name "*.php"`
replace "function &editTemplate( &\$contentobjectAttribute )" "function editTemplate( \$contentobjectAttribute )" -- `find * -name "*.php"`
replace "function &informationTemplate( &\$contentobjectAttribute )" "function informationTemplate( \$contentobjectAttribute )" -- `find * -name "*.php"`
replace "function objectDisplayInformation( &\$objectAttribute, \$mergeInfo = false )" "function objectDisplayInformation( \$objectAttribute, \$mergeInfo = false )" -- `find * -name "*.php"`
replace "function onPublish( &\$contentObjectAttribute, &\$contentObject, &\$publishedNodes )" "function onPublish( \$contentObjectAttribute, \$contentObject, \$publishedNodes )" -- `find * -name "*.php"`
replace "function &operatorList(" "function operatorList(" -- `find * -name "*.php"`
replace "=& eZINI::create(" "= eZINI::create(" -- `find * -name "*.php"`
replace "=& templateInit(" "= templateInit(" -- `find * -name "*.php"`
replace "=& \$Params[\"Module\"]" "= \$Params[\"Module\"]" -- `find * -name "*.php"`
replace "=& \$tpl->fetch(" "= \$tpl->fetch(" -- `find * -name "*.php"`
replace "=& \$Params['Module']" "= \$Params['Module']" -- `find * -name "*.php"`
replace "=& eZHTTPFile::fetch(" "= eZHTTPFile::fetch(" -- `find * -name "*.php"`
replace "=& imageInit(" "= imageInit(" -- `find * -name "*.php"`
replace "=& eZNodeviewfunctions::generateNodeView" "= eZNodeviewfunctions::generateNodeView" -- `find * -name "*.php"`
replace "=& eZOrder::active" "= eZOrder::active" -- `find * -name "*.php"`
replace "=& eZObjectRelationListType::parseXML" "= eZObjectRelationListType::parseXML" -- `find * -name "*.php"`
replace "function &attribute(" "function attribute(" -- `find * -name "*.php"`
replace "=& eZHTTPTool::instance(" "= eZHTTPTool::instance(" -- `find * -name "*.php"`

replace "=& \$tpl->elementValue(" "= \$tpl->elementValue(" -- `find * -name "*.php"`
replace "&\$tpl" "\$tpl" -- `find * -name "*.php"`
replace "&\$db" "\$db" -- `find * -name "*.php"`
replace "&\$package" "\$package" -- `find * -name "*.php"`
replace "&\$http" "\$http" -- `find * -name "*.php"`
replace "&\$object" "\$object" -- `find * -name "*.php"`
replace "&\$originalContentObjectAttribute" "\$originalContentObjectAttribute" -- `find * -name "*.php"`
replace "&\$classAttribute" "\$classAttribute" -- `find * -name "*.php"`
replace "&\$attributeParametersNode" "\$attributeParametersNode" -- `find * -name "*.php"`
replace "&\$attributeNode" "\$attributeNode" -- `find * -name "*.php"`


replace "&\$contentClassAttribute" "\$contentClassAttribute" -- `find * -name "*.php"`
replace "&\$contentObject" "\$contentObject" -- `find * -name "*.php"`

replace "&\$element" "\$element" -- `find * -name "*.php"`
replace "&\$doc" "\$doc" -- `find * -name "*.php"`
replace "=& \$path" "= \$path" -- `find * -name "*.php"`

replace "&\$operatorName" "\$operatorName" -- `find * -name "*.php"`
replace "&\$lastElement" "\$lastElement" -- `find * -name "*.php"`
replace "&\$operatorParameters" "\$operatorParameters" -- `find * -name "*.php"`

replace "=& eZScript::instance(" "= eZScript::instance(" -- `find * -name "*.php"`
replace "=& eZCLI::instance(" "= eZCLI::instance(" -- `find * -name "*.php"`
replace "=& eZDB::instance(" "= eZDB::instance(" -- `find * -name "*.php"`


# Function name fixes
replace "eZContentObjectTreeNode::remove(" "eZContentObjectTreeNode::removeNode" -- `find * -name "*.php"`
replace "eZPolicyLimitation::remove(" "eZPolicyLimitation::removeByID(" -- `find * -name "*.php"`
replace "eZPolicy::remove(" "eZPolicy::removeByID(" -- `find * -name "*.php"`

replace "eZWorkflowEventType::registerType(" "eZWorkflowEventType::registerEventType(" -- `find * -name "*.php"`
replace "eZWorkflowGroupType::registerType(" "eZWorkflowGroupType::registerGroupType(" -- `find * -name "*.php"`
replace "workflow->remove(" "workflow->removeThis(" -- `find * -name "*.php"`

replace "eZContentObjectTreeNode::subTree(" "eZContentObjectTreeNode::subTreeByNodeID(" -- `find * -name "*.php"`
replace "eZContentObjectTreeNode::subTreeCount(" "eZContentObjectTreeNode::subTreeCountByNodeID(" -- `find * -name "*.php"`
replace "function definition(" "static function definition(" -- `find * -name "*.php"`



